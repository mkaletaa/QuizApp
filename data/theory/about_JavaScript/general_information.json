[
  {
    "data": [
      {
        "type": "Text",
        "value": "JS is a highly popular programming language with a vast ecosystem and thriving community. It is easy to learn and provides a high-level structure that ensures a pleasant developer experience. Many GitHub repositories with the highest number of stars are associated with JS. <br></br> In 2007, a co-founder of StackOverflow, <b>Jeff Atwood</b> uttered a statement now known as Atwood's Law: <span><i>”Any application that can be written in JavaScript, will eventually be written in JavaScript.”</i></span> <br></br>This statement holds a lot of truth. Initially created for building frontend web applications, JS has evolved to become versatile, used for developing backend servers, mobile, desktop or even TV applications on all major platforms. JavaScript is everywhere, and this won't change for a long time, whether we like it or not. This is why it is worthy to master this language. Before you explore the syntax learn these key features of JavaScript:"
      },
      {
        "type": "Header",
        "value": "dynamically typed",
        "props": { "size": "md" }
      },
      {
        "type": "Text",
        "value": "It is a dynamically typed language, meaning variables do not have fixed types and can change type at runtime. Weak typing allows implicit type conversions, so operations between different types (like numbers and strings) can occur without explicit conversion. While this flexibility enhances adaptability, it may pose challenges related to type control in larger projects. Fortunately, as you'll soon discover, TypeScript can easily help address this issue."
      },
      {
        "type": "Header",
        "value": "interpreted",
        "props": { "size": "md" }
      },
      {
        "type": "Text",
        "value": "This language is interpreted, meaning that the source code is executed directly by the interpreter, facilitating development and testing of applications."
      },
      {
        "type": "Header",
        "value": "multi-paradigm",
        "props": { "size": "md" }
      },
      {
        "type": "Text",
        "value": "It is a multi-paradigm language, which means you can write imperative, object-oriented, or functional code. The latter became especially popular thanks to React library."
      },
      {
        "type": "Header",
        "value": "single-threaded",
        "props": { "size": "md" }
      },
      {
        "type": "Text",
        "value": "JavaScript is a single-threaded language, meaning that it does not inherently support multithreading directly. However, thanks to the mechanism of asynchronous programming, JavaScript can efficiently handle multiple operations simultaneously without the need for utilizing multiple threads."
      }
    ]
  }
]
