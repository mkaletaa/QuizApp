[
  {
    "title": "",
    "data": [
      {
        "type": "Text",
        "value": "If it comes to mobile app development, JavaScript can also come in handy. This language is widely chosen by both IOS and Android developers. There are two main ways to build mobile apps with it:"
      }
    ]
  },
  {
    "title": "React Native/Expo",
    "data": [
      {
        "type": "Text",
        "value": "React Native is an open-source framework developed by Facebook (now Meta) for building cross-platform mobile applications using JavaScript and React. First released in 2015, React Native allows developers to write code once and deploy it on both iOS and Android platforms, while providing a native-like user experience. Moreover, you can build web, desktop and TV apps with it! If you already know React (see the \"frontend\" lesson) you also know 95% of React Native. Many libraries from React ecosystem are compatible with RN as well. Many big tech companies build their products using React Native. For example apps like Facebook, Messenger, MS Teams, Pinterest, Discord and many more exist thanks to this framework. Even the one you are currently on. This proves JavaScript is absolutely everywhere."
      },
      {
        "type": "Header",
        "value": "Expo",
        "props": { "size": "md" }
      },
      {
        "type": "Text",
        "value": "Expo is an open-source framework and platform for building cross-platform mobile applications using React Native. Created by Expo, Inc., it simplifies and accelerates the development process by providing a set of tools and services that streamline app development, testing, and deployment. Expo aims to make it easier for developers to get started with React Native and build robust mobile applications with minimal configuration. It isn't mandatory to use it but recently it became a recommended option."
      },
      {
        "type": "Image",
        "value": "https://i.postimg.cc/yNPDHBDF/image.png"
      },
      {
        "type": "Text",
        "value": "Expo comes with many helpful tools. Here are the most notable of them:"
      },
      {
        "type": "List",
        "value": [
          "Expo CLI - a command-line interface tool that provides various commands to manage and develop Expo projects. It is essential for initializing projects, running development servers, and handling builds and deployments.",
          "EAS (Expo Application Services): A suite of services that enhances Expo's capabilities, including building, submitting, and updating applications. With EAS, app updates are immediate, unlike with other mobile technologies such as Kotlin or Swift.",
          "Expo Router - a routing library for that helps manage navigation between different screens based on folder structure of your project",
          "Expo GO -  a mobile application that allows developers to preview and test their Expo projects on physical devices without needing to build or install native binaries. No cables, no virtual machines. Just your own phone and wi-fi network."
        ]
      }
    ]
  },
  {
    "title": "Ionic ecosystem",
    "data": [
      {
        "type": "Text",
        "value": "The Ionic ecosystem is a suite of tools and technologies designed for building high-quality, cross-platform mobile and desktop <ins data-key='PWA' class='hint'>Progressive Web Applications</ins> (PWAs) using standard web technologies like HTML, CSS, and JavaScript (including React, Angular or Vue)."
      },
      {
        "type": "Text",
        "value": "At the heart of this ecosystem is the Ionic Framework which is an open-source UI toolkit for building high-performing mobile applications. It enables developers to create hybrid mobile apps that run on iOS, Android, and the web with a single codebase. Ionic provides pre-designed UI components that ensure native look and feel across platforms. It is possible thanks to <b>Stencil</b> which is a web component compiler created by the Ionic team."
      },
      {
        "type": "Text",
        "value": "But this stack alone isn't enough to create a mobile app. We also need a native container, provided by tools like <b>Cordova</b> or <b>Capacitor</b>. Both tools enable access to Android and iOS SDKs but do so in different ways. Cordova wraps the web app in a native container with a webview, whereas Capacitor offers a more modern approach with improved performance and seamless integration with native tools."
      },
      {
        "type": "YouTube",
        "value": "PLM9coCCIRY"
      },
      {
        "type": "Header",
        "value": "pros",
        "props": { "size": "md" }
      },
      {
        "type": "List",
        "value": [
          "Cross-platform Development: Write one codebase and deploy on multiple platforms like iOS, Android, and web, saving time and effort.",
          "Access to Native Features: Use native APIs via a rich set of plugins or create custom native plugins when needed.",
          "Compatibility with Any Framework: Capacitor is framework-agnostic, meaning you can use it with Angular, React, Vue, or even plain JavaScript.",
          "Ease of Integration with Existing Projects: Capacitor can be added to an existing web app without requiring a complete rebuild."
        ]
      },
      {
        "type": "Header",
        "value": "cons",
        "props": { "size": "md" }
      },
      {
        "type": "List",
        "value": [
          "Performance: While sufficient for many use cases, Capacitor-based apps may not achieve the same performance levels as fully native apps in certain resource-intensive scenarios.",
          "Limited Native Plugin Support: While many plugins exist, Capacitorâ€™s plugin ecosystem is not as extensive as native development tools or frameworks like React Native.",
          "Requires Some Native Code Knowledge: When you need more complex native functionality, you might have to write custom plugins in native code (Java for Android, Swift for iOS).",
          "Manual Configuration: Compared to frameworks like React Native, Capacitor may require more manual setup for things like push notifications or deep linking."
        ]
      }
    ]
  }
]
