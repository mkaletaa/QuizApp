[
  {
    "data": [
      {
        "type": "Text",
        "value": "Now that you know how to run code, itâ€™s time to learn how to comment it. <br></br>Comments are essential for making your code more understandable and for leaving notes for yourself or other developers. In JavaScript, there are two ways to add comments:<b>1. Single-line comments</b>: Use <ins class=''>//</ins> to add comments on a single line."
      },
      {
        "type": "Code",
        "value": "// console.log('Hello World')\n///// You can use more than two slashes",
        "props": { "language": "javascript" }
      },
      {
        "type": "Text",
        "value": "<b>2. Multi-line comments</b>: Enclose multi-line comments between <ins class=''>/*</ins> and <ins class=''>*/</ins>"
      },
      {
        "type": "Code",
        "value": "/* \nconsole.log('Hello World') \n\n// you can nest single-line comments inside multi-line comments. \n */\n\n/* multi-line comments, despite their name, can occupy just a single line.*/\n/*** you can use more than one asterisk **/",
        "props": { "language": "javascript" }
      },
      {
        "type": "Header",
        "value": "Why use comments?",
        "props": { "size": "md" }
      },
      {
        "type": "List",
        "value": [
          "<u>Documentation</u>: comments provide information about the purpose and functionality of your code, making it easier for others (or yourself) to understand it.",
          "<u>Debugging</u>: comments can be used to temporarily disable lines of code for debugging purposes without deleting them."
        ]
      },
      {
        "type": "Header",
        "value": "Best practices",
        "props": { "size": "md" }
      },
      {
        "type": "List",
        "value": [
          "<u>Be Clear and Concise</u>: Write comments that are easy to understand. Avoid unnecessary comments that simply restate the code.",
          "<u>Regularly update comments</u>: Keep your comments up to date. If you change the code, make sure to update any relevant comments.",
          "<u>Avoid Over-Commenting</u>: While comments are helpful, code should ideally be self-explanatory. Avoid overusing comments for simple and obvious code."
        ]
      },
      {
        "type": "Divider"
      },
      {
        "type": "Text",
        "value": "There are some comment conventions popular among programmers:"
      },
      {
        "type": "Text",
        "value": "<b>TODO</b> and <b>FIXME</b> comments are informal markers in code that help developers track unfinished tasks (TODO) or known issues that need fixing (FIXME), ensuring better project organization and communication within a team."
      },
      {
        "type": "Code",
        "value": "// TODO: Add validation for user input\n// FIXME: Handle edge cases for negative numbers",
        "props": { "language": "javascript" }
      },
      {
        "type": "Header",
        "value": "JSDoc",
        "props": { "size": "md" }
      },
      {
        "type": "Text",
        "value": "JSDoc is a popular format for commenting code in many languages, which allows for the generation of documentation for source code. Using JSDoc helps maintain code clarity, document functions, parameters, return values, and other code elements. With JSDoc, documentation generation tools can automatically create detailed and readable documents."
      },
      {
        "type": "Code",
        "value": "/**\n* Returns the sum of two numbers.\n*\n* @param {number} a - The first number.\n* @param {number} b - the second number.\n* @returns {number} - The sum of a and b.\n*/\n function add(a, b) {\n \t\t  return a + b;\n } ",
        "props": { "language": "javascript" }
      },
      {
        "type": "Text",
        "value": "Now that you've grasped the basics of commenting, you'll find it beneficial for enhancing the readability and maintainability of your code"
      },
      {
        "type": "Block",
        "value": [
          {
            "type": "Text",
            "value": "You can enhance your comments when you install VS Code extension called 'Better Comments'"
          },
          {
            "type": "Image",
            "value": "https://i.postimg.cc/zBqg1Q1T/image.png"
          }
        ],
        "props": {
          "type": "tip"
        }
      }
    ]
  }
]
