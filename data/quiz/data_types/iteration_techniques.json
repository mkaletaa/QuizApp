[
  {
    "id": "data_types|iteration_techniques|1",
    "multiChoice": true,
    "question": "Which of these data types can be used with the <ins>map()</ins> method directly?",
    "options": [
      { "id": "1", "val": "array", "correct": true },
      { "id": "2", "val": "string" },
      { "id": "3", "val": "object" },
      { "id": "4", "val": "map" },
      { "id": "5", "val": "set" }
    ],
    "explanation": [
      "The <ins>map()</ins> method is specifically designed for arrays. It cannot be directly used with other data types. To use <ins>map()</ins> with strings or objects, convert them to an array first using <ins>Array.from(string)</ins> for strings or <ins>Object.values(object)</ins> for objects."
    ]
  },
  {
    "id": "data_types|iteration_techniques|2",
    "multiChoice": true,
    "question": "Which of these data types can be used with the <ins>forEach()</ins> method directly?",
    "options": [
      { "id": "1", "val": "array", "correct": true },
      { "id": "2", "val": "string" },
      { "id": "3", "val": "object" },
      { "id": "4", "val": "map", "correct": true },
      { "id": "5", "val": "set", "correct": true }
    ],
    "explanation": [
      "The <ins>forEach()</ins> method can be used directly with arrays, Maps, and Sets. For strings, you must first convert them to an array of characters using <ins>Array.from(string)</ins> or <ins>string.split('')</ins>. For objects, use <ins>Object.values(object)</ins> to get an array of values."
    ]
  },
  {
    "id": "data_types|iteration_techniques|3",
    "multiChoice": true,
    "question": "Which of these data types can be used with the <ins>for-of()</ins> loop directly?",
    "options": [
      { "id": "1", "val": "array", "correct": true },
      { "id": "2", "val": "string", "correct": true },
      { "id": "3", "val": "object" },
      { "id": "4", "val": "map", "correct": true },
      { "id": "5", "val": "set", "correct": true }
    ],
    "explanation": [
      "The <ins>for-of()</ins> loop can iterate directly over arrays, strings, Maps, and Sets. To iterate over the values of an object, you can use <ins>Object.values(object)</ins> to get an array of values that can be iterated over with <ins>for-of()</ins>."
    ]
  },
  {
    "id": "data_types|iteration_techniques|4",
    "multiChoice": true,
    "question": "Which of these data types can be used with the <ins>for-in()</ins> loop directly?",
    "options": [
      { "id": "1", "val": "array", "correct": true },
      { "id": "2", "val": "string", "correct": true },
      { "id": "3", "val": "object", "correct": true },
      { "id": "4", "val": "map" },
      { "id": "5", "val": "set" }
    ]
  },
  {
    "id": "data_types|iteration_techniques|5",
    "multiChoice": true,
    "question": "Which of these loops can use <ins>break</ins>?",
    "options": [
      { "id": "1", "val": "map" },
      { "id": "2", "val": "forEach" },
      { "id": "3", "val": "for-in", "correct": true },
      { "id": "4", "val": "for-of", "correct": true }
    ]
  },
  {
    "id": "data_types|iteration_techniques|6",
    "question": "Which method is used to create a new array by applying a function to each element of an existing array?",
    "options": [
      { "id": "1", "val": "forEach" },
      { "id": "2", "val": "map", "correct": true },
      { "id": "3", "val": "for-in" },
      { "id": "4", "val": "for-of" }
    ]
  }
]
