import { useState } from 'react'

const useResults = itemSet => {
  const [results, setResults] = useState([]) //same as results but as a state

  function isCorrect(
    itemUserChoices, //opcje danego itema, kt√≥re zaznaczy≈Ç user
    options //opcje konkretnego itema
  ): 'correct' | 'incorrect' | 'kindof' {
    //zwr√≥ƒá incorrect je≈õli ≈ºaden element tablicy itemUserChoices nie ma w≈Ça≈õciwo≈õci correct: true
    //zwr√≥ƒá correct je≈õli wszystkie elementy tablicy itemUserChoices majƒÖ w≈Ça≈õciwo≈õƒá correct: true i jest ich dok≈Çadnie tyle ile element√≥w tablicy itemUserChoices ma w≈Ça≈õciwo≈õƒá correct: true
    //zwr√≥ƒá w ka≈ºdym innym przypadku

    let nrOfCorrectUserOptions = 0
    let nrOfCorrectOptions = 0

    for (const itemUserChoice of itemUserChoices) {
      if (itemUserChoice?.correct) nrOfCorrectUserOptions++
    }

    if (nrOfCorrectUserOptions === 0) return 'incorrect'

    for (const option of options) {
      if (option.correct) nrOfCorrectOptions++
    }

    if (
      nrOfCorrectUserOptions === nrOfCorrectOptions &&
      nrOfCorrectOptions === itemUserChoices.length
    )
      return 'correct'

    return 'kindof'
  }

  /* funkcja przyjmuje id itema oraz naci≈õniƒôtƒÖ opcjƒô 
(niezale≈ºnie czy zosta≈Ça naci≈õniƒôta w celu zaznaczenia czy odznaczenia) */
  function createResultsArray(pressedOption, itemId) {
    for (let i = 0; i < itemSet.length; i++) {
      //pƒôtla po itemSet
      if (itemSet[i].id === itemId) {
        //je≈õli natrafimy na itema, kt√≥rego opcja zozsta≈Ça przyci≈õniƒôta

        //w przypadku pyta≈Ñ jednokrotnego wyboru:
        if (!itemSet[i].multiChoice) {
          //jeli nie udzielono jeszcze odpowiedzi na to pytanie, dodaj jƒÖ do arrayOfResults
          if (results[i]?.userChoices?.length === 0) {
            console.log('nie by≈Ço nic jeszcze zaznaczone')

            let results2 = [...results]
            results2[i].userChoices.push(pressedOption)
            results2[i].isCorrect = isCorrect(
              results[i].userChoices,
              itemSet[i].options
            )
            setResults(results2)
          } else {
            //je≈õli ju≈º co≈õ by≈Ço zaznaczone
            console.log('co≈õ by≈Ço juz zaznazone i...')
            //je≈õli zaznaczono nowƒÖ opcjƒô
            if (pressedOption.isChosen) {
              console.log('...zaznaczono nowƒÖ odpowied≈∫')

              let results2 = [...results]

              results2[i].userChoices = [pressedOption]
              results2[i].isCorrect = isCorrect(
                results[i].userChoices,
                itemSet[i].options
              )

              setResults(results2)
            } else {
              // je≈õli odznaczono odpowied≈∫
              console.log('...odznaczono odpowied≈∫')
              let results2 = [...results]
              results2[i].userChoices = []
              results2[i].isCorrect = isCorrect(
                results[i].userChoices,
                itemSet[i].options
              )
              setResults(results2)
            }
          }
          return
        }

        //je≈õli pytanie jest wielokrotnego wyboru:
        //jeli na pytanie nie udzielono jeszcze ≈ºadnej odpowiedzi
        if (results[i].userChoices.length === 0) {
          console.log('nie by≈Ço nic jeszcze zaznaczone')

          let results2 = [...results]
          results2[i].userChoices.push(pressedOption)
          console.log('üöÄ ~ compare ~ results2:', results2)
          results2[i].isCorrect = isCorrect(
            results[i].userChoices,
            itemSet[i].options
          )

          setResults(results2)
        } else {
          //je≈õli ju≈º udzielono odpowiedzi
          console.log('co≈õ by≈Ço juz zaznazone i...')
          //je≈õli zaznaczono nowƒÖ odpowied≈∫
          if (pressedOption.isChosen) {
            console.log('...zaznaczono nowƒÖ odpowied≈∫')
            let results2 = [...results]
            results2[i].userChoices.push(pressedOption)
            results2[i].isCorrect = isCorrect(
              results[i].userChoices,
              itemSet[i].options
            )

            setResults(results2)
          } else {
            //je≈õli odznaczono odpowied≈∫
            console.log('...odznaczono odpowied≈∫')

            let results2 = [...results]
            results2[i].userChoices = results2[i].userChoices.filter(
              option => option.id !== pressedOption.id
            )
            results2[i].isCorrect = isCorrect(
              results[i].userChoices,
              itemSet[i].options
            )
            setResults(results2)
          }
        }

        break
      }
    }
  }

  return [results, setResults, createResultsArray]
}

export default useResults
