import { useState } from 'react'

const useResults = itemSet => {
  const [results, setResults] = useState([]) //same as results but as a state

  function isCorrect(
    itemUserChoices,
    options
  ): 'correct' | 'incorrect' | 'kindof' {
    console.log('ðŸš€ ~ Quiz ~ options:', options)
    console.log('ðŸš€ ~ isCorrect ~ userChoices:', itemUserChoices)

    let nrOfCorrectUserOptions = 0
    let nrOfCorrectOptions = 0

    for (const itemUserChoice of itemUserChoices) {
      if (itemUserChoice?.correct) nrOfCorrectUserOptions++
    }
    console.log('ðŸš€ ~ Quiz ~ nrOfCorrectUserOptions:', nrOfCorrectUserOptions)

    if (nrOfCorrectUserOptions === 0) return 'incorrect'

    for (const option of options) {
      if (option.correct) nrOfCorrectOptions++
    }
    console.log('ðŸš€ ~ Quiz ~ nrOfCorrectOptions:', nrOfCorrectOptions)

    if (
      nrOfCorrectUserOptions === nrOfCorrectOptions &&
      nrOfCorrectOptions === itemUserChoices.length
    )
      return 'correct'
    console.log('ðŸš€ ~ Quiz ~ itemUserChoices:', itemUserChoices.length)

    return 'kindof'
    //zwrÃ³Ä‡ incorrect jeÅ›li Å¼aden element tablicy itemUserChoices nie ma wÅ‚aÅ›ciwoÅ›ci correct: true
    //zwrÃ³Ä‡ correct jeÅ›li wszystkie elementy tablicy itemUserChoices majÄ… wÅ‚aÅ›ciwoÅ›Ä‡ correct: true i jest ich dokÅ‚adnie tyle ile elementÃ³w tablicy itemUserChoices ma wÅ‚aÅ›ciwoÅ›Ä‡ correct: true
    // return 'correct'
  }

  /* funkcja przyjmuje id itema oraz naciÅ›niÄ™tÄ… opcjÄ™ 
(niezaleÅ¼nie czy zostaÅ‚a naciÅ›niÄ™ta w celu zaznaczenia czy odznaczenia) */
  function compare(pressedOption, itemId) {
    for (let i = 0; i < itemSet.length; i++) {
      if (itemSet[i].id === itemId) {
        // console.log("ðŸš€ ~ compare ~ quiz:", quiz[i].id)
        // console.log("ðŸš€ ~ compare ~ itemId:", itemId, )

        if (!itemSet[i].multiChoice) {
          //w przypadku pytaÅ„ jednokrotnego wyboru:
          if (results[i]?.userChoices?.length === 0) {
            console.log('nie byÅ‚o nic jeszcze zaznaczone')
            //jeli nie udzielono jeszcze odpowiedzi na to pytanie, dodaj jÄ… do arrayOfResults
            // results[i].userChoices.push(pressedOption)
            let results2 = [...results]
            results2[i].userChoices.push(pressedOption)
            results2[i].isCorrect = isCorrect(
              results[i].userChoices,
              itemSet[i].options
            )
            setResults(results2)
          } else {
            console.log('coÅ› byÅ‚o juz zaznazone i...')

            //jeÅ›li juÅ¼ ucoÅ› byÅ‚o zaznaczone
            if (pressedOption.isChosen) {
              //jeÅ›li zaznaczono innÄ… odpowiedÅº
              console.log('...zaznaczono innÄ… odpowiedÅº')

              // results[i].userChoices.pop() //pozbÄ…dÅº siÄ™ starej odpowiedzi
              // results[i].userChoices.push(pressedOption) //dodaj zaktualizowanÄ… odpowiedÅº
              let results2 = [...results]

              results2[i].userChoices = [pressedOption]
              results2[i].isCorrect = isCorrect(
                results[i].userChoices,
                itemSet[i].options
              )

              setResults(results2)
            } else {
              console.log('...odznaczono odpowiedÅº')

              //jeÅ›li odznaczono istniejÄ…cÄ… odpowiedÅº
              // results[i].userChoices.pop() //pozbÄ…dÅº siÄ™ starej odpowiedzi
              let results2 = [...results]
              results2[i].userChoices = []
              results2[i].isCorrect = isCorrect(
                results[i].userChoices,
                itemSet[i].options
              )
              setResults(results2)
            }
          }
          // setResults(results)
          return
        }

        //jeÅ›li pytanie jest wielokrotnego wyboru:
        if (results[i].userChoices.length === 0) {
          console.log('nie byÅ‚o nic jeszcze zaznaczoneeeee')
          //jeli nie udzielono jeszcze odpowiedzi na to pytanie, dodaj jÄ… do arrayOfResults
          // results[i].userChoices.push(pressedOption)\
          let results2 = [...results]
          results2[i].userChoices.push(pressedOption)
          console.log('ðŸš€ ~ compare ~ results2:', results2)
          results2[i].isCorrect = isCorrect(
            results[i].userChoices,
            itemSet[i].options
          )

          setResults(results2)
        } else {
          //jeÅ›li juÅ¼ udzielono odpowiedzi
          console.log('coÅ› byÅ‚o juz zaznazone i...')
          if (pressedOption.isChosen) {
            console.log('...zaznaczono innÄ… odpowiedÅº')
            let results2 = [...results]
            results2[i].userChoices.push(pressedOption)
            //jeÅ›li zaznaczono innÄ… odpowiedÅº
            results2[i].isCorrect = isCorrect(
              results[i].userChoices,
              itemSet[i].options
            )

            setResults(results2)
            // arrayOfResults[i].userChoices.filter //pozbÄ…dÅº siÄ™ starej odpowiedzi
            // results[i].userChoices?.push(pressedOption) //dodaj zaktualizowanÄ… odpowiedÅº
          } else {
            console.log('...odznaczono odpowiedÅº')
            //jeÅ›li odznaczono istniejÄ…cÄ… odpowiedÅº pozbÄ…dÅº siÄ™ starej odpowiedzi
            let results2 = [...results]
            results2[i].userChoices = results2[i].userChoices.filter(
              option => option.id !== pressedOption.id
            )
            results2[i].isCorrect = isCorrect(
              results[i].userChoices,
              itemSet[i].options
            )
            setResults(results2)
          }
        }

        // setResults(results)

        break
      }
    }
  }

  return [results, setResults, compare]
}

export default useResults
